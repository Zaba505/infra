load("@aspect_bazel_lib//lib:transitions.bzl", "platform_transition_filegroup")
load("@rules_go//go:def.bzl", "go_binary", "go_library")
load("@rules_pkg//pkg:tar.bzl", "pkg_tar")
load("@rules_oci//oci:defs.bzl", "oci_image", "oci_tarball")

go_library(
    name = "lb-sink_lib",
    srcs = ["main.go"],
    embedsrcs = ["config.yaml"],
    importpath = "github.com/Zaba505/infra/services/lb-sink",
    visibility = ["//visibility:private"],
    deps = [
        "//pkg/framework",
        "//services/lb-sink/service",
    ],
)

go_binary(
    name = "lb-sink",
    embed = [":lb-sink_lib"],
    pure = "on",
    visibility = ["//visibility:public"],
)

pkg_tar(
    name = "tar",
    srcs = [":lb-sink"],
)

# TODO: add labels
oci_image(
    name = "image",
    base = "@distroless_base",
    entrypoint = ["/lb-sink"],
    tars = [":tar"],
)

# This is the target that should be released to the target platform
platform_transition_filegroup(
    name = "transitioned_image",
    srcs = [":image"],
    target_platform = select({
        "@platforms//cpu:arm64": "@rules_go//go/toolchain:linux_arm64",
        "@platforms//cpu:x86_64": "@rules_go//go/toolchain:linux_amd64",
    }),
)

# $ bazel build //services/lb-sink:tarball
# $ podman load --input $(bazel cquery --noshow_progress --ui_event_filters=-info,-stderr --output=files //services/lb-sink:tarball)
# $ podman run --rm -p8080:8080 -eHTTP_PORT=8080 ghcr.io/zaba505/infra/lb-sink:latest
oci_tarball(
    name = "tarball",
    image = ":image",
    repo_tags = [
        "ghcr.io/zaba505/infra/lb-sink:latest",
    ],
    tags = ["manual"],
)
