load("@aspect_bazel_lib//lib:transitions.bzl", "platform_transition_filegroup")
load("@rules_go//go:def.bzl", "go_binary", "go_library")
load("@rules_oci//oci:defs.bzl", "oci_image", "oci_load")
load("@rules_pkg//pkg:tar.bzl", "pkg_tar")

go_library(
    name = "boot-image-proxy_lib",
    srcs = ["main.go"],
    embedsrcs = ["config.yaml"],
    importpath = "github.com/Zaba505/infra/services/boot-image-proxy",
    visibility = ["//visibility:private"],
    deps = [
        "//pkg/ftp",
        "//services/boot-image-proxy/app",
    ],
)

go_binary(
    name = "boot-image-proxy",
    embed = [":boot-image-proxy_lib"],
    pure = "on",
    visibility = ["//visibility:public"],
)

pkg_tar(
    name = "tar",
    srcs = [":boot-image-proxy"],
    extension = "tar.gz",
)

# TODO: add labels
oci_image(
    name = "image",
    base = "@distroless_base",
    entrypoint = ["/boot-image-proxy"],
    tars = [":tar"],
)

# This is the target that should be released to the target platform
platform_transition_filegroup(
    name = "transitioned_image",
    srcs = [":image"],
    target_platform = select({
        "@platforms//cpu:arm64": "@rules_go//go/toolchain:linux_arm64",
        "@platforms//cpu:x86_64": "@rules_go//go/toolchain:linux_amd64",
    }),
)

oci_load(
    name = "tarball",
    image = ":image",
    repo_tags = [
        "ghcr.io/zaba505/infra/boot-image-proxy:latest",
    ],
    tags = ["manual"],
)

# $ bazel build //services/boot-image-proxy:tarball.tar
# $ podman load --input $(bazel cquery --noshow_progress --ui_event_filters=-info,-stderr --output=files //services/boot-image-proxy:tarball.tar)
# $ podman run --rm -ePROXY_TARGET_HOST=machine.zaba505.dev -p8080:8080 -eCOMMAND_PORT=8080 -ePASSIVE_START_PORT=7000 -ePASSIVE_END_PORT=8000 -p7000-8000:7000-8000 ghcr.io/zaba505/infra/boot-image-proxy:latest
filegroup(
    name = "tarball.tar",
    srcs = [":tarball"],
    output_group = "tarball",
    tags = ["manual"],
)
